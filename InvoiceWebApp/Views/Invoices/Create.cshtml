@model InvoiceWebApp.ViewModels.InvoiceFormViewModel
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResource> Localizer

@{
    var isEdit = ViewBag.InvoiceId != null;
    var formAction = isEdit ? "Edit" : "Create";
    ViewData["Title"] = isEdit ? Localizer["EditInvoice"] : Localizer["CreateInvoice"];
}

<div class="container mt-5">
    <div class="card shadow-sm border-0">
        <div class="card-body p-4">

            <h3 class="mb-4 fw-bold">@ViewData["Title"]</h3>

            <form asp-action="@formAction" method="post">
                @if (isEdit)
                {
                    <input type="hidden" name="Id" value="@ViewBag.InvoiceId" />
                }

                <div class="mb-3">
                    <label asp-for="InvoiceDate" class="form-label">@Localizer["InvoiceDate"]</label>
                    <input asp-for="InvoiceDate" class="form-control" />
                    <span asp-validation-for="InvoiceDate" class="text-danger small"></span>
                </div>

                <h5 class="mt-4 mb-3">@Localizer["InvoiceItems"]</h5>

                <table class="table table-bordered" id="itemsTable">
                    <thead class="table-light">
                        <tr>
                            <th>@Localizer["Product"]</th>
                            <th>@Localizer["Quantity"]</th>
                            <th>@Localizer["UnitPrice"]</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Items.Count; i++)
                        {
                            <tr>
                                <td>
                                    <input name="Items[@i].ProductName"
                                           class="form-control"
                                           value="@Model.Items[i].ProductName"
                                           pattern=".*[A-Za-z].*"
                                           title="@Localizer["ProductPatternMessage"]" />
                                </td>
                                <td>
                                    <input name="Items[@i].Quantity" class="form-control" type="number" value="@Model.Items[i].Quantity" />
                                </td>
                                <td>
                                    <input name="Items[@i].UnitPrice" class="form-control" type="number" step="0.01" value="@Model.Items[i].UnitPrice" />
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">X</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="d-flex justify-content-between mt-4">
                    <button type="button" class="btn btn-secondary" onclick="addRow()">+ @Localizer["AddItem"]</button>
                    <div>
                        <a asp-action="Index" class="btn btn-outline-secondary me-2">@Localizer["Cancel"]</a>
                        <button type="submit" class="btn btn-success">@Localizer["SaveInvoice"]</button>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function addRow() {
            const table = document.getElementById("itemsTable").getElementsByTagName('tbody')[0];
            const index = table.rows.length;
            const row = table.insertRow();

            row.innerHTML = `
                <td><input name="Items[${index}].ProductName" class="form-control" pattern=".*[A-Za-z].*" title="@Localizer["ProductPatternMessage"]" /></td>
                <td><input name="Items[${index}].Quantity" type="number" class="form-control" /></td>
                <td><input name="Items[${index}].UnitPrice" type="number" step="0.01" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">X</button></td>
            `;
        }

        function removeRow(button) {
            const row = button.closest("tr");
            row.remove();
        }
    </script>
}
